name: Release (build & push & scan)

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'web/**'
      - '.github/workflows/**'

permissions:
  contents: read

env:
  IMAGE_NS: ${{ secrets.DOCKERHUB_USERNAME }}   # docker.io/<username>/

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Meta (version/tag)
        id: meta
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "version=${SHORT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Docker login (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push app
        run: |
          V="${{ steps.meta.outputs.version }}"
          docker build -t "docker.io/${{ env.IMAGE_NS }}/project1-app:${V}" -t "docker.io/${{ env.IMAGE_NS }}/project1-app:latest" app
          docker push "docker.io/${{ env.IMAGE_NS }}/project1-app:${V}"
          docker push "docker.io/${{ env.IMAGE_NS }}/project1-app:latest"

      - name: Build & push web
        run: |
          V="${{ steps.meta.outputs.version }}"
          docker build -t "docker.io/${{ env.IMAGE_NS }}/project1-web:${V}" -t "docker.io/${{ env.IMAGE_NS }}/project1-web:latest" web
          docker push "docker.io/${{ env.IMAGE_NS }}/project1-web:${V}"
          docker push "docker.io/${{ env.IMAGE_NS }}/project1-web:latest"

      # (Optional) Also push to Nexus (dev-only). Set these secrets if you want it.
      - name: Login to Nexus (optional)
        if: ${{ secrets.NEXUS_REGISTRY && secrets.NEXUS_USERNAME && secrets.NEXUS_PASSWORD }}
        run: |
          echo "${{ secrets.NEXUS_PASSWORD }}" | docker login "${{ secrets.NEXUS_REGISTRY }}" -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin
      - name: Push to Nexus (optional)
        if: ${{ secrets.NEXUS_REGISTRY && secrets.NEXUS_USERNAME && secrets.NEXUS_PASSWORD }}
        run: |
          V="${{ steps.meta.outputs.version }}"
          docker tag "docker.io/${{ env.IMAGE_NS }}/project1-app:${V}"     "${{ secrets.NEXUS_REGISTRY }}/project1-app:${V}"
          docker tag "docker.io/${{ env.IMAGE_NS }}/project1-app:latest"   "${{ secrets.NEXUS_REGISTRY }}/project1-app:latest"
          docker tag "docker.io/${{ env.IMAGE_NS }}/project1-web:${V}"     "${{ secrets.NEXUS_REGISTRY }}/project1-web:${V}"
          docker tag "docker.io/${{ env.IMAGE_NS }}/project1-web:latest"   "${{ secrets.NEXUS_REGISTRY }}/project1-web:latest"
          docker push "${{ secrets.NEXUS_REGISTRY }}/project1-app:${V}"
          docker push "${{ secrets.NEXUS_REGISTRY }}/project1-app:latest"
          docker push "${{ secrets.NEXUS_REGISTRY }}/project1-web:${V}"
          docker push "${{ secrets.NEXUS_REGISTRY }}/project1-web:latest"

  snyk-after-push:
    name: Snyk scan (registry images)
    needs: build-and-push
    uses: tAIness/devops-ci-lib/.github/workflows/snyk-reusable.yml@main
    with:
      images: |
        docker.io/${{ secrets.DOCKERHUB_USERNAME }}/project1-app:${{ needs.build-and-push.outputs.version }}
        docker.io/${{ secrets.DOCKERHUB_USERNAME }}/project1-web:${{ needs.build-and-push.outputs.version }}
        docker.io/${{ secrets.DOCKERHUB_USERNAME }}/project1-app:latest
        docker.io/${{ secrets.DOCKERHUB_USERNAME }}/project1-web:latest
      ignore_list_path: security/ignores.txt
      severity: high
      upload_artifacts: true
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
