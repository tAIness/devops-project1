# deploy/compose.yml
services:
  db:
    image: postgres:17.5
    environment:
      POSTGRES_DB: ${DB_NAME:-supermario}
      POSTGRES_USER: ${DB_USER:-mario}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
    - dbdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mario} -d ${DB_NAME:-supermario}"]
      interval: 10s
      timeout: 5s
      retries: 5

  service:
    image: ${IMAGE_REPO_APP}:${TAG}
    environment:
      PORT: "8000"
      APP_ENV: "production"
      GUNICORN_WORKERS: "2"
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
    depends_on:
      db:
        condition: service_healthy
    ports:
    - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  front:
    image: ${IMAGE_REPO_WEB}:${TAG}
    ports:
    - "80:80"
    volumes:
    - ./content/images:/usr/share/nginx/html/images:rw
    depends_on:
      service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/health >/dev/null"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

volumes:
  dbdata:
