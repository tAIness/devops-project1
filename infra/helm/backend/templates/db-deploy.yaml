# templates/db-deploy.yaml
{{- $db := (get .Values "db") | default (dict) -}}
{{- if (get $db "enabled" | default false) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: {{ .Release.Namespace }}
  labels: { app: mario-db }
spec:
  replicas: 1
  selector:
    matchLabels: { app: mario-db }
  template:
    metadata:
      labels: { app: mario-db }
    spec:
      # Let kube set GID on the mounted volume
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch

      # Fix ownership and create the subdir that PGDATA will use
      initContainers:
        - name: fix-perms
          image: busybox:1.36
          securityContext:
            runAsUser: 0
          command: ["sh", "-c"]
          args:
            - |
              set -eux
              mkdir -p /var/lib/postgresql/data /var/lib/postgresql/data/pgdata
              chown -R 999:999 /var/lib/postgresql/data
              chmod 700 /var/lib/postgresql/data/pgdata || true
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data

      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: db-secrets   # POSTGRES_USER / POSTGRES_DB / POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: ["sh","-lc","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["sh","-lc","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
            initialDelaySeconds: 20
            periodSeconds: 10
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pg-data
{{- end }}
