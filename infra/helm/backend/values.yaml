# /devops-project1/infra/helm/backend/values.yaml
image:
  repository: docker.io/itaef/supermario-service
  tag: ""                    # ← empty means “use .Chart.AppVersion”
  pullPolicy: IfNotPresent

# Make every resource name resolve to "app"
fullnameOverride: "app"

service:
  port: 8000

ingress:
  enabled: true
  host: api.mario.local
  useRegex: false

secrets:
  # create the Secret with DB credentials used by Postgres + initContainer
  createDbCreds: true
  dbCreds:
    POSTGRES_DB: mario
    POSTGRES_USER: mario
    POSTGRES_PASSWORD: mario123

  # create the Secret with DATABASE_URL used by the app container
  createDbConn: true
  dbConn:
    # templated so Helm renders the right URL automatically
    url: >-
      postgresql://{{ .Values.secrets.dbCreds.POSTGRES_USER }}:{{ .Values.secrets.dbCreds.POSTGRES_PASSWORD }}
      @{{ .Values.db.service.name }}:{{ .Values.db.service.port }}/{{ .Values.secrets.dbCreds.POSTGRES_DB }}


runtime:
  fixPasswd: false  # set true only if you still need the passwd overlay

autoscaling:
  mode: none          # "none" or "keda" or "hpa"
  hpa:
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  keda:
    minReplicaCount: 1
    maxReplicaCount: 3
    triggers:
      - type: prometheus
        metadata:
          serverAddress: http://prometheus-operated.monitoring.svc:9090
          metricName: http_requests_pending
          threshold: "100"
          query: sum(rate(http_requests_pending[1m]))

db:
  enabled: true
  image: postgres:15
  storage:
    size: 1Gi
  service: { name: db, port: 5432 }
  secrets: { credsName: db-secrets }

