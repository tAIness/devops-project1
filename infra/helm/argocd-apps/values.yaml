global:
  argoNamespace: argocd
  repoURL: https://github.com/tAIness/devops-project1.git
  targetRevision: main

project:
  enabled: true
  name: default

apps:
  - name: backend
    path: infra/helm/backend
    destinationNamespace: mario-backend
    helm:
      values:
        image:
          repository: docker.io/itaef/supermario-service
          tag: ""   # empty → chart uses .Chart.AppVersion
    values:
      ingress:
        enabled: true
        host: api.mario.local
        useRegex: false

      secrets:
        createDbCreds: true
        createDbConn: true
        dbCreds:
          POSTGRES_DB: mario
          POSTGRES_USER: mario
          POSTGRES_PASSWORD: mario123

      dbConn:
          # Or use DNS: db.mario-backend.svc.cluster.local
          url: "postgres://mario:mario123@db:5432/mario"

      db:
        enabled: true
        storage:
          size: 1Gi
        storageClassName: standard
        service: { name: db, port: 5432 }

  - name: web
    path: infra/helm/web
    destinationNamespace: mario-web
    targetRevision: ""
    helm:
      values:
        image:
          repository: docker.io/itaef/supermario-front
          tag: ""   # empty → chart uses .Chart.AppVersion
    values:
      ingress:
        enabled: true
        host: web.mario.local

helmApps:
  - name: monitoring
    destinationNamespace: monitoring
    source:
      repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 62.3.0
    helm:
      skipCrds: false
      values: |
        kubeEtcd: { enabled: false }
        kubeControllerManager: { enabled: false }
        kubeScheduler: { enabled: false }
        defaultRules:
          rules:
            etcd: false
            kubeControllerManager: false
            kubeScheduler: false

        grafana:
          admin:
            existingSecret: grafana-admin
            userKey: admin-user
            passwordKey: admin-password
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [grafana.mario.local]

        prometheus:
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [prometheus.mario.local]
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}
            podMonitorNamespaceSelector: {}

        alertmanager:
          enabled: true
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [alertmanager.mario.local]
          alertmanagerSpec:
            replicas: 1 
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: standard
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 1Gi

secrets:
  - namespace: monitoring
    name: grafana-admin
    stringData:
      admin-user: admin
      admin-password: admin
