# infra/helm/argocd-apps/values.yaml
global:
  argoNamespace: argocd
  repoURL: https://github.com/tAIness/devops-project1.git
  targetRevision: main
  releaseTag: "" # CI sets vX.Y.Z here

project:
  enabled: true
  name: default
apps:
  - name: backend
    path: infra/helm/backend
    destinationNamespace: mario-backend
    helm:
      values:
        image:
          repository: docker.io/itaef/supermario-service
          tag: "" # empty → chart uses .Chart.AppVersion
    values:
      ingress:
        enabled: true
        host: api.mario.local
        useRegex: false
      secrets:
        createDbCreds: true
        createDbConn: true
        dbCreds:
          POSTGRES_DB: mario
          POSTGRES_USER: mario
          POSTGRES_PASSWORD: mario123
      dbConn:
        # Or use DNS: db.mario-backend.svc.cluster.local
        url: "postgres://mario:mario123@db:5432/mario"
      db:
        enabled: true
        storage:
          size: 1Gi
        storageClassName: standard
        service: {name: db, port: 5432}
  - name: web
    path: infra/helm/web
    destinationNamespace: mario-web
    targetRevision: ""
    helm:
      values:
        image:
          repository: docker.io/itaef/supermario-front
          tag: "" # empty → chart uses .Chart.AppVersion
    values:
      ingress:
        enabled: true
        host: web.mario.local
helmApps:
  - name: monitoring
    destinationNamespace: monitoring
    source:
      repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 62.3.0
    helm:
      skipCrds: false
      values: "kubeEtcd: { enabled: false }\nkubeControllerManager: { enabled: false }\nkubeScheduler: { enabled: false }\ndefaultRules:\n  rules:\n    etcd: false\n    kubeControllerManager: false\n    kubeScheduler: false\n\ngrafana:\n  admin:\n    existingSecret: grafana-admin\n    userKey: admin-user\n    passwordKey: admin-password\n  ingress:\n    enabled: true\n    ingressClassName: nginx\n    hosts: [grafana.mario.local]\n\nprometheus:\n  ingress:\n    enabled: true\n    ingressClassName: nginx\n    hosts: [prometheus.mario.local]\n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    podMonitorSelectorNilUsesHelmValues: false\n    serviceMonitorNamespaceSelector: {}\n    podMonitorNamespaceSelector: {}\n\nalertmanager:\n  enabled: true\n  ingress:\n    enabled: true\n    ingressClassName: nginx\n    hosts: [alertmanager.mario.local]\n  alertmanagerSpec:\n    replicas: 1 \n    storage:\n      volumeClaimTemplate:\n        spec:\n          storageClassName: standard\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 1Gi\n"
secrets:
  - namespace: monitoring
    name: grafana-admin
    stringData:
      admin-user: admin
      admin-password: admin
