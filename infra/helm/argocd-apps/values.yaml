# devops-project1/infra/helm/argocd-apps/values.yaml
global:
  argoNamespace: argocd
  repoURL: https://github.com/tAIness/devops-project1.git
  targetRevision: main
  releaseTag: "v1.0.215"
project:
  enabled: false
  name: default
apps:
  - name: backend
    path: infra/helm/backend
    destinationNamespace: mario-backend
    annotations:
      argocd.argoproj.io/sync-wave: "0"
    helm:
      version: v3
    values:
      fullnameOverride: "app"
      image:
        repository: docker.io/itaef/supermario-service
        tag: "" # use .Chart.AppVersion
        pullPolicy: IfNotPresent
      service:
        port: 8000
      ingress:
        enabled: true
        host: api.mario.local
        useRegex: false
      secrets:
        createDbCreds: true
        dbCredsB64:
          POSTGRES_DB: bWFyaW8=
          POSTGRES_USER: bWFyaW8=
          POSTGRES_PASSWORD: bWFyaW8xMjM=
        createDbConn: true
        dbConnB64:
          # base64 of: postgresql://mario:mario123@db:5432/mario
          url: cG9zdGdyZXNxbDovL21hcmlvOm1hcmlvMTIzQGRiOjU0MzIvbWFyaW8=
      db:
        enabled: true
        image: postgres:15
        storage:
          size: 1Gi
          storageClassName: standard
        service: {name: db, port: 5432}
        secrets: {credsName: db-secrets}
  - name: web
    path: infra/helm/web
    destinationNamespace: mario-web
    annotations:
      argocd.argoproj.io/sync-wave: "10"
    helm:
      version: v3
    values:
      image:
        repository: docker.io/itaef/supermario-front
        tag: "" # use .Chart.AppVersion
      ingress:
        enabled: true
        host: web.mario.local
helmApps:
  # --- Argo CD itself (install first) ---
  - name: argocd
    manageWithHelm: false
    destinationNamespace: argocd
    annotations:
      argocd.argoproj.io/sync-wave: "-20"
    source:
      repoURL: https://argoproj.github.io/argo-helm
      chart: argo-cd
      targetRevision: 6.7.12
    helm:
      values: "global:\n  domain: argo.mario.local\n  \nserver:\n  service:\n    type: ClusterIP\n  ingress:\n    enabled: true\n    ingressClassName: nginx\n    hosts:\n      - argo.mario.local\nconfigs:\n  params:\n    server.insecure: true"
  # --- KEDA ---
  - name: keda
    destinationNamespace: keda
    annotations:
      argocd.argoproj.io/sync-wave: "-10"
    source:
      repoURL: https://kedacore.github.io/charts
      chart: keda
      targetRevision: 2.14.0
    helm:
      values: ""
  # --- Monitoring stack ---
  - name: monitoring
    destinationNamespace: monitoring
    annotations:
      argocd.argoproj.io/sync-wave: "-5"
    source:
      repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 62.3.0
    helm:
      skipCrds: false
      values: |-
        kubeEtcd: { enabled: false }
        kubeControllerManager: { enabled: false }
        kubeScheduler: { enabled: false }
        defaultRules:
          rules:
            etcd: false
            kubeControllerManager: false
            kubeScheduler: false

        grafana:
          admin:
            existingSecret: grafana-admin
            userKey: admin-user
            passwordKey: admin-password
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [grafana.mario.local]

        prometheus:
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [prometheus.mario.local]
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}
            podMonitorNamespaceSelector: {}

        alertmanager:
          enabled: true
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts: [alertmanager.mario.local]
          alertmanagerSpec:
            replicas: 1
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: standard
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 1Gi
# Only real Secrets belong here
secrets:
  - namespace: monitoring
    name: grafana-admin
    stringData:
      admin-user: admin
      admin-password: admin
