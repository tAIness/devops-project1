apiVersion: v1
kind: Secret
metadata:
  name: db-conn
  namespace: mario-backend
type: Opaque
stringData:
  url: postgresql://superuser:superpass@db.mario-backend.svc.cluster.local:5432/supermario
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: mario-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mario-app            # ← keep existing immutable selector
  template:
    metadata:
      labels:
        app: mario-app          # ← must match selector
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:15
          command: ["/bin/sh","-c"]
          args:
            - |
              set -eu
              HOST="db.mario-backend.svc.cluster.local"
              echo "Waiting for Postgres at ${HOST}:5432 ..."
              until pg_isready -h "$HOST" -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do
                echo "postgres not ready yet, retrying..."
                sleep 2
              done
              echo "Postgres is ready."
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_DB
      containers:
        - name: app
          image: docker.io/itaef/supermario-service:v1.0.48
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-conn
                  key: url
            - name: PORT
              value: "8000"
            - name: GUNICORN_WORKERS
              value: "2"
            - name: GUNICORN_TIMEOUT
              value: "30"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: "1"
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000       # numeric UID to satisfy runAsNonRoot
            runAsGroup: 1000
            allowPrivilegeEscalation: false

---
apiVersion: v1
kind: Service
metadata:
  name: app-svc
  namespace: mario-backend
spec:
  selector:
    app: mario-app          # ← match the pod label above
  ports:
    - name: http
      port: 8000
      targetPort: 8000

